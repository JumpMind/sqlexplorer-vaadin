import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

group = 'org.jumpmind.symmetric'

buildscript {
    repositories { 
       jcenter()
       maven { url 'http://repo.spring.io/plugins-release' } 
    }

    dependencies { 
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'     
    }    
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-eclipse'
apply plugin: 'license'

sourceCompatibility=1.6
targetCompatibility=1.6

repositories {
    mavenCentral()
    maven { url "http://maven.jumpmind.com/repo" }
    maven { url "http://maven.vaadin.com/vaadin-addons" }
}

compileJava { options.bootClasspath = "${System.getProperty('java.home')}/lib/rt.jar" }

ext {

    log4jVersion = '1.2.17'
    slf4jVersion = '1.7.7'
    springVersion = '4.0.5.RELEASE'
    vaadinVersion = '7.3.8'
    jettyVersion = '9.2.1.v20140609'
    commonsLangVersion = '2.6'
    commonsDbcpVersion = '1.4'
    commonsIoVersion = '2.4'
    commonsBeanUtils = '1.9.2'
    httpComponentsVersion = '4.3.2'
    jaxenVersion = '1.1.4'
    javaMailVersion = '1.4.7'
    jdomVersion = '2.0.5'
    springVersion = '4.0.2.RELEASE'
    symmetricVersion = '3.7.27'
    servletVersion = '3.0.1'
    h2Version = '1.3.175'
    mysqlVersion = '5.1.29'
    jtdsVersion = '1.3.1'

    env = System.getenv()
    
}

configurations { deployerJars }

license {
    header rootProject.file('HEADER')
    strictCheck true
    includes(["**/*.java", "**/*.properties", "**/*.xml"])
    excludes(["**/AppWidgetSet.gwt.xml"])
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts { archives sourcesJar }

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: deployUploadUrl) {
            authentication(userName: deployUser, password: deployPassword)
        }
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = false
    }
}

dependencies {

    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
    
    provided "javax.servlet:javax.servlet-api:$servletVersion"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "org.jumpmind.symmetric:symmetric-db:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-jdbc:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-io:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-util:$symmetricVersion"
    compile "commons-lang:commons-lang:$commonsLangVersion"
    compile "commons-dbcp:commons-dbcp:$commonsDbcpVersion"
    compile "commons-io:commons-io:$commonsIoVersion"
    compile "org.vaadin.addons:aceeditor:0.8.13"
    compile "org.vaadin.addons:tableexport:1.4.0"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "com.vaadin:vaadin-server:$vaadinVersion"
    
    testCompile "com.h2database:h2:1.3.175"
    testCompile "junit:junit:4.11"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile "org.springframework:spring-test:$springVersion"
    
}

task develop {
    description 'Generates Eclipse artifacts and sets up your development environment'
    dependsOn tasks.cleanEclipse, tasks.cleanEclipseWtp, tasks.eclipse, tasks.eclipseWtp
}

task deploy {
    description 'Shortcut for Maven users'
    dependsOn tasks.uploadArchives
}