import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens
import java.text.SimpleDateFormat

group = 'org.jumpmind.vaadin'

buildscript {
    repositories { 
       jcenter()
       maven { url 'http://repo.spring.io/plugins-release' } 
       maven { url 'https://plugins.gradle.org/m2/' }
       maven { url "http://maven.vaadin.com/vaadin-addons" }         
    }

    dependencies { 
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'     
        classpath 'com.devsoap.plugin:gradle-vaadin-plugin:1.2.2'    
        classpath 'com.vaadin:vaadin-compatibility-server:8.1.2'
        classpath 'com.vaadin:vaadin-compatibility-client-compiled:8.1.2'
    }    
}

apply plugin: 'com.devsoap.plugin.vaadin'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'maven'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-eclipse'
apply plugin: 'license'

sourceCompatibility=1.8
targetCompatibility=1.8

version = version + '.' + ('d'.equals(buildNumber) ? ('d' + new SimpleDateFormat("yyyyMMddHHmmSS").format(new Date())) : buildNumber)

repositories {
    mavenCentral()
    maven { url "http://maven.jumpmind.com/repo" }
    maven { url "http://maven.vaadin.com/vaadin-addons" }
    maven { url 'https://plugins.gradle.org/m2/' }
}

compileJava { options.bootClasspath = "${System.getProperty('java.home')}/lib/rt.jar" }

ext {

    log4jVersion = '1.2.17'
    slf4jVersion = '1.7.21'
    vaadinVersion = '8.1.2'
    jettyVersion = '9.4.5.v20170502'
    commonsLangVersion = '2.6'
    commonsDbcpVersion = '1.4'
    commonsIoVersion = '2.4'
    commonsBeanUtils = '1.9.2'
    httpComponentsVersion = '4.3.2'
    jaxenVersion = '1.1.4'
    javaMailVersion = '1.4.7'
    jdomVersion = '2.0.5'
    springVersion = '4.2.6.RELEASE'
    symmetricVersion = '3.8.29'
    servletVersion = '3.0.1'
    h2Version='1.4.191'
    mysqlVersion = '5.1.29'
    jtdsVersion = '1.3.1'

    env = System.getenv()
    
}

configurations { deployerJars }

license {
    header rootProject.file('HEADER')
    strictCheck true
    includes(["**/*.java", "**/*.properties", "**/*.xml"])
    excludes(["**/AppWidgetSet.gwt.xml"])
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts { archives sourcesJar }

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: deployUploadUrl) {
            authentication(userName: deployUser, password: deployPassword)
        }
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = false
    }
}

vaadin.version = vaadinVersion
vaadin.manageDependencies = false
vaadin.manageRepositories = false
vaadin.logToConsole = true
vaadinSourcesJar.enabled=false
vaadinJavadocJar.enabled=false
vaadin.push = true
vaadinCompile.gwtSdkFirstInClasspath=false
artifacts {
   archives file("$buildDir/libs/${jar.baseName}-${jar.version}.${jar.extension}")
}
    
configurations.archives.with {    
    artifacts.remove artifacts.find { it.archiveTask.is war }
}

dependencies {

    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
    
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    
    compile "org.jumpmind.symmetric:symmetric-db:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-jdbc:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-io:$symmetricVersion"
    compile "org.jumpmind.symmetric:symmetric-util:$symmetricVersion"
    
    compile "commons-lang:commons-lang:$commonsLangVersion"
    compile "commons-dbcp:commons-dbcp:$commonsDbcpVersion"
    compile "commons-io:commons-io:$commonsIoVersion"
    
    compile "org.springframework:spring-webmvc:$springVersion"
    
    compile "org.apache.poi:poi-ooxml:3.17"
    
    compile group: 'com.vaadin', name: 'vaadin-compatibility-server', version: "$vaadinVersion"
    compile group: 'com.vaadin', name: 'vaadin-compatibility-client-compiled', version: "$vaadinVersion"
    compile group: 'com.vaadin', name: 'vaadin-compatibility-client', version: "$vaadinVersion"
    compile group: 'cglib', name: 'cglib', version: '3.2.5'
    
    //compile "com.vaadin:vaadin-server:$vaadinVersion"
    compile "com.vaadin:vaadin-push:$vaadinVersion"
    compile "com.vaadin:vaadin-themes:$vaadinVersion"
    compile "org.vaadin.addons:aceeditor:0.8.15"
    compile "com.vaadin:vaadin-context-menu:2.0.0"

//    provided ("com.vaadin:vaadin-client-compiler:$vaadinVersion") {
//       exclude group:'org.eclipse.jetty'
//    }
    
    testCompile "com.h2database:h2:$h2Version"
    testCompile "junit:junit:4.11"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-all:1.9.5"
    
    provided "javax.servlet:javax.servlet-api:$servletVersion"
    provided "javax.servlet.jsp:jsp-api:2.2"
    provided "javax.websocket:javax.websocket-api:1.1"
    
    testCompile "org.eclipse.jetty:jetty-webapp:$jettyVersion"
    testCompile "org.eclipse.jetty:jetty-jmx:$jettyVersion"
    testCompile "org.eclipse.jetty:jetty-annotations:$jettyVersion"
    testCompile "org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion"    

    testCompile "org.slf4j:slf4j-api:$slf4jVersion"
    testCompile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    testCompile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    testCompile "log4j:log4j:$log4jVersion"
    
    
}

task develop {
    description 'Generates Eclipse artifacts and sets up your development environment'
    dependsOn tasks.cleanEclipse, tasks.cleanEclipseWtp, tasks.eclipse, tasks.eclipseWtp, vaadinCompile, vaadinThemeCompile
}

task deploy {
    description 'Shortcut for Maven users'
    dependsOn tasks.uploadArchives
}

assemble.dependsOn jar